
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ownerId: 'ownerId',
  razorpayCustomerId: 'razorpayCustomerId'
};

exports.Prisma.SubscriptionPlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  priceInr: 'priceInr',
  razorpayPlanId: 'razorpayPlanId',
  isFree: 'isFree',
  features: 'features',
  createdAt: 'createdAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  planId: 'planId',
  razorpaySubscriptionId: 'razorpaySubscriptionId',
  razorpayPaymentId: 'razorpayPaymentId',
  status: 'status',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  email: 'email',
  passwordHash: 'passwordHash',
  isOwner: 'isOwner',
  tokenVersion: 'tokenVersion',
  isSuperAdmin: 'isSuperAdmin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  isSystemRole: 'isSystemRole',
  createdAt: 'createdAt'
};

exports.Prisma.PermissionScalarFieldEnum = {
  id: 'id',
  actionName: 'actionName',
  description: 'description'
};

exports.Prisma.RolePermissionScalarFieldEnum = {
  roleId: 'roleId',
  permissionId: 'permissionId'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  userId: 'userId',
  roleId: 'roleId'
};

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  email: 'email',
  phone: 'phone',
  isRegular: 'isRegular',
  hasDelays: 'hasDelays',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  clientId: 'clientId',
  type: 'type',
  amount: 'amount',
  status: 'status',
  dueDate: 'dueDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  category: 'category',
  amount: 'amount',
  createdAt: 'createdAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  createdById: 'createdById',
  name: 'name',
  description: 'description',
  sku: 'sku',
  barcode: 'barcode',
  category: 'category',
  unit: 'unit',
  price: 'price',
  currency: 'currency',
  taxRate: 'taxRate',
  stock: 'stock',
  reorderLevel: 'reorderLevel',
  images: 'images',
  status: 'status',
  dimension: 'dimension',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  userId: 'userId',
  action: 'action',
  details: 'details',
  createdAt: 'createdAt'
};

exports.Prisma.LegalServiceProviderProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  status: 'status',
  firmName: 'firmName',
  contactNumber: 'contactNumber',
  address: 'address',
  city: 'city',
  taluka: 'taluka',
  state: 'state',
  pincode: 'pincode',
  email: 'email',
  website: 'website',
  registrationDate: 'registrationDate',
  companyAge: 'companyAge',
  annualTurnover: 'annualTurnover',
  serviceCategories: 'serviceCategories',
  otherCategory: 'otherCategory',
  aadhaarLast4: 'aadhaarLast4',
  pan: 'pan',
  gstin: 'gstin',
  accountHolderName: 'accountHolderName',
  accountNumber: 'accountNumber',
  bankName: 'bankName',
  ifscCode: 'ifscCode',
  branchName: 'branchName',
  upiId: 'upiId',
  paymentMode: 'paymentMode',
  agreedToTermsAt: 'agreedToTermsAt',
  eSignStatus: 'eSignStatus',
  eSignTransactionId: 'eSignTransactionId',
  eSignedAt: 'eSignedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LegalServiceOfferingScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  name: 'name',
  rate: 'rate',
  billingCycle: 'billingCycle'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Organization: 'Organization',
  SubscriptionPlan: 'SubscriptionPlan',
  Subscription: 'Subscription',
  User: 'User',
  Role: 'Role',
  Permission: 'Permission',
  RolePermission: 'RolePermission',
  UserRole: 'UserRole',
  Client: 'Client',
  Invoice: 'Invoice',
  Expense: 'Expense',
  Product: 'Product',
  AuditLog: 'AuditLog',
  LegalServiceProviderProfile: 'LegalServiceProviderProfile',
  LegalServiceOffering: 'LegalServiceOffering'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\ssura\\OneDrive\\Desktop\\internship\\solviser\\Solviser-Files\\api\\node_modules\\.pnpm\\@prisma+client@6.16.2_prism_00ff948be96cd54460984cdf53956a4b\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\ssura\\OneDrive\\Desktop\\internship\\solviser\\Solviser-Files\\api\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../../../.env"
  },
  "relativePath": "../../../../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is the definitive Prisma schema for your application,\n// using Prisma-native UUIDs for maximum portability and reliability.\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Organization {\n  id                 String        @id @default(uuid()) @db.Uuid\n  name               String        @unique\n  createdAt          DateTime      @default(now()) @map(\"created_at\")\n  updatedAt          DateTime      @updatedAt @map(\"updated_at\")\n  ownerId            String?       @unique @map(\"owner_id\") @db.Uuid\n  razorpayCustomerId String?       @unique @map(\"razorpay_customer_id\")\n  owner              User?         @relation(\"OrganizationOwner\", fields: [ownerId], references: [id], onDelete: SetNull, onUpdate: NoAction)\n  subscription       Subscription?\n  users              User[]        @relation(\"OrganizationUsers\")\n  roles              Role[]\n  auditLogs          AuditLog[]\n  clients            Client[]\n  Invoice            Invoice[]\n  Expense            Expense[]\n  products           Product[]\n\n  @@map(\"organizations\")\n}\n\nmodel SubscriptionPlan {\n  id             String         @id @default(uuid()) @db.Uuid\n  name           String         @unique\n  priceInr       Int            @map(\"price_inr\")\n  razorpayPlanId String?        @unique @map(\"razorpay_plan_id\")\n  isFree         Boolean        @default(false) @map(\"is_free\")\n  features       Json?\n  createdAt      DateTime       @default(now()) @map(\"created_at\")\n  subscriptions  Subscription[]\n\n  @@map(\"subscription_plans\")\n}\n\nmodel Subscription {\n  id                     String           @id @default(uuid()) @db.Uuid\n  organizationId         String           @unique @map(\"organization_id\") @db.Uuid\n  planId                 String           @map(\"plan_id\") @db.Uuid\n  razorpaySubscriptionId String?          @unique @map(\"razorpay_subscription_id\")\n  razorpayPaymentId      String?          @map(\"razorpay_payment_id\")\n  status                 String\n  currentPeriodStart     DateTime         @map(\"current_period_start\")\n  currentPeriodEnd       DateTime         @map(\"current_period_end\")\n  createdAt              DateTime         @default(now()) @map(\"created_at\")\n  updatedAt              DateTime         @updatedAt @map(\"updated_at\")\n  organization           Organization     @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  plan                   SubscriptionPlan @relation(fields: [planId], references: [id])\n\n  @@map(\"subscriptions\")\n}\n\nmodel User {\n  id                String        @id @default(uuid()) @db.Uuid\n  organizationId    String        @map(\"organization_id\") @db.Uuid\n  name              String\n  email             String        @unique\n  passwordHash      String        @map(\"password_hash\")\n  isOwner           Boolean       @default(false) @map(\"is_owner\")\n  tokenVersion      Int           @default(0) @map(\"token_version\")\n  isSuperAdmin      Boolean       @default(false) @map(\"is_super_admin\") // <-- THE FIRST FIX\n  createdAt         DateTime      @default(now()) @map(\"created_at\")\n  updatedAt         DateTime      @updatedAt @map(\"updated_at\")\n  organization      Organization  @relation(\"OrganizationUsers\", fields: [organizationId], references: [id], onDelete: Cascade)\n  ownedOrganization Organization? @relation(\"OrganizationOwner\")\n  roles             UserRole[]\n  auditLogs         AuditLog[]\n\n  legalServiceProviderProfile LegalServiceProviderProfile?\n  productsCreated             Product[]\n\n  @@map(\"users\")\n}\n\nmodel Role {\n  id             String           @id @default(uuid()) @db.Uuid\n  organizationId String           @map(\"organization_id\") @db.Uuid\n  name           String\n  isSystemRole   Boolean          @default(false) @map(\"is_system_role\") // <-- THE SECOND FIX\n  createdAt      DateTime         @default(now()) @map(\"created_at\")\n  organization   Organization     @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  permissions    RolePermission[]\n  users          UserRole[]\n\n  @@unique([organizationId, name])\n  @@map(\"roles\")\n}\n\nmodel Permission {\n  id          String           @id @default(uuid()) @db.Uuid\n  actionName  String           @unique @map(\"action_name\")\n  description String?\n  roles       RolePermission[]\n\n  @@map(\"permissions\")\n}\n\nmodel RolePermission {\n  roleId       String     @map(\"role_id\") @db.Uuid\n  permissionId String     @map(\"permission_id\") @db.Uuid\n  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)\n\n  @@id([roleId, permissionId])\n  @@map(\"role_permissions\")\n}\n\nmodel UserRole {\n  userId String @map(\"user_id\") @db.Uuid\n  roleId String @map(\"role_id\") @db.Uuid\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@id([userId, roleId])\n  @@map(\"user_roles\")\n}\n\nmodel Client {\n  id             String    @id @default(uuid()) @db.Uuid\n  organizationId String    @map(\"organization_id\") @db.Uuid\n  name           String\n  email          String?   @unique\n  phone          String?\n  isRegular      Boolean   @default(false)\n  hasDelays      Boolean   @default(false)\n  invoices       Invoice[]\n  createdAt      DateTime  @default(now()) @map(\"created_at\")\n  updatedAt      DateTime  @updatedAt @map(\"updated_at\")\n\n  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@map(\"clients\")\n}\n\nmodel Invoice {\n  id             String    @id @default(uuid()) @db.Uuid\n  organizationId String    @map(\"organization_id\") @db.Uuid\n  clientId       String?   @map(\"client_id\") @db.Uuid\n  type           String // \"SALE\" | \"PURCHASE\"\n  amount         Float\n  status         String // \"PAID\" | \"DUE\" | \"OVERDUE\"\n  dueDate        DateTime?\n  createdAt      DateTime  @default(now()) @map(\"created_at\")\n  updatedAt      DateTime  @updatedAt @map(\"updated_at\")\n\n  client       Client?      @relation(fields: [clientId], references: [id])\n  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@map(\"invoices\")\n}\n\nmodel Expense {\n  id             String   @id @default(uuid()) @db.Uuid\n  organizationId String   @map(\"organization_id\") @db.Uuid\n  category       String // \"Salaries\", \"Rent\", \"Utilities\"\n  amount         Float\n  createdAt      DateTime @default(now()) @map(\"created_at\")\n\n  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@map(\"expenses\")\n}\n\nmodel Product {\n  id             String @id @default(uuid()) @db.Uuid\n  organizationId String @map(\"organization_id\") @db.Uuid\n  createdById    String @map(\"created_by_id\") @db.Uuid\n\n  // Core details\n  name        String\n  description String?\n  sku         String? @unique\n  barcode     String? @unique\n  category    String?\n  unit        String?\n  price       Float\n  currency    String  @default(\"INR\")\n  taxRate     Float?\n\n  // Inventory\n  stock        Int @default(0)\n  reorderLevel Int @default(0)\n\n  // E-commerce / Media\n  images Json?\n  status String @default(\"ACTIVE\")\n\n  // 🔹 New field\n  dimension String?\n\n  // Audit\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  createdBy    User         @relation(fields: [createdById], references: [id], onDelete: Cascade)\n\n  @@map(\"products\")\n}\n\nmodel AuditLog {\n  id             String       @id @default(uuid()) @db.Uuid\n  organizationId String       @map(\"organization_id\") @db.Uuid\n  userId         String       @map(\"user_id\") @db.Uuid\n  action         String\n  details        Json?\n  createdAt      DateTime     @default(now()) @map(\"created_at\")\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"audit_logs\")\n}\n\nmodel LegalServiceProviderProfile {\n  id     String @id @default(uuid()) @db.Uuid\n  userId String @unique @map(\"user_id\") @db.Uuid\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  status String @default(\"APPROVED\") // DRAFT, PENDING_APPROVAL, APPROVED, REJECTED\n\n  // Section 1: Organization Details\n  firmName         String?\n  contactNumber    String?\n  address          String?\n  city             String?\n  taluka           String?\n  state            String?\n  pincode          String?\n  email            String?\n  website          String?\n  registrationDate DateTime?\n  companyAge       Int?\n  annualTurnover   String?\n\n  // Section 2: Legal Services\n  serviceCategories String[]\n  otherCategory     String?\n\n  // Section 3: KYC\n  aadhaarLast4 String?\n  pan          String?\n  gstin        String?\n\n  // Section 4: Bank Details\n  accountHolderName String?\n  accountNumber     String?\n  bankName          String?\n  ifscCode          String?\n  branchName        String?\n  upiId             String?\n  paymentMode       String?\n\n  agreedToTermsAt    DateTime? @map(\"agreed_to_terms_at\")\n  eSignStatus        String?   @map(\"e_sign_status\") // e.g., 'COMPLETED', 'PENDING'\n  eSignTransactionId String?   @map(\"e_sign_transaction_id\")\n  eSignedAt          DateTime? @map(\"e_signed_at\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relation to dynamic services list\n  legalServiceOfferings LegalServiceOffering[]\n\n  @@map(\"legal_service_provider_profiles\")\n}\n\nmodel LegalServiceOffering {\n  id        String                      @id @default(uuid()) @db.Uuid\n  profileId String                      @map(\"profile_id\") @db.Uuid\n  profile   LegalServiceProviderProfile @relation(fields: [profileId], references: [id], onDelete: Cascade)\n\n  name         String\n  rate         Float\n  billingCycle String // PER_SERVICE, MONTHLY, YEARLY\n\n  @@map(\"legal_service_offerings\")\n}\n",
  "inlineSchemaHash": "aa6f31bcb230c5a4dc6bf7ae48cde45dfe22c5108ebf0d5d8add2d9eb8fa2985",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"owner_id\"},{\"name\":\"razorpayCustomerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"razorpay_customer_id\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizationOwner\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"OrganizationToSubscription\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizationUsers\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"OrganizationToRole\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToOrganization\"},{\"name\":\"clients\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToOrganization\"},{\"name\":\"Invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToOrganization\"},{\"name\":\"Expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToOrganization\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrganizationToProduct\"}],\"dbName\":\"organizations\"},\"SubscriptionPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceInr\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"price_inr\"},{\"name\":\"razorpayPlanId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"razorpay_plan_id\"},{\"name\":\"isFree\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_free\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToSubscriptionPlan\"}],\"dbName\":\"subscription_plans\"},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"plan_id\"},{\"name\":\"razorpaySubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"razorpay_subscription_id\"},{\"name\":\"razorpayPaymentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"razorpay_payment_id\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"current_period_start\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"current_period_end\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSubscription\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"SubscriptionPlan\",\"relationName\":\"SubscriptionToSubscriptionPlan\"}],\"dbName\":\"subscriptions\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"isOwner\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_owner\"},{\"name\":\"tokenVersion\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"token_version\"},{\"name\":\"isSuperAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_super_admin\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationUsers\"},{\"name\":\"ownedOrganization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationOwner\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"UserToUserRole\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"legalServiceProviderProfile\",\"kind\":\"object\",\"type\":\"LegalServiceProviderProfile\",\"relationName\":\"LegalServiceProviderProfileToUser\"},{\"name\":\"productsCreated\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToUser\"}],\"dbName\":\"users\"},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isSystemRole\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_system_role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToRole\"},{\"name\":\"permissions\",\"kind\":\"object\",\"type\":\"RolePermission\",\"relationName\":\"RoleToRolePermission\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":\"roles\"},\"Permission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"action_name\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"RolePermission\",\"relationName\":\"PermissionToRolePermission\"}],\"dbName\":\"permissions\"},\"RolePermission\":{\"fields\":[{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_id\"},{\"name\":\"permissionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"permission_id\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToRolePermission\"},{\"name\":\"permission\",\"kind\":\"object\",\"type\":\"Permission\",\"relationName\":\"PermissionToRolePermission\"}],\"dbName\":\"role_permissions\"},\"UserRole\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRole\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":\"user_roles\"},\"Client\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRegular\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"hasDelays\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"ClientToInvoice\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ClientToOrganization\"}],\"dbName\":\"clients\"},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"client_id\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToInvoice\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InvoiceToOrganization\"}],\"dbName\":\"invoices\"},\"Expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ExpenseToOrganization\"}],\"dbName\":\"expenses\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"barcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taxRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reorderLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dimension\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToProduct\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProductToUser\"}],\"dbName\":\"products\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AuditLogToOrganization\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":\"audit_logs\"},\"LegalServiceProviderProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LegalServiceProviderProfileToUser\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firmName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taluka\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pincode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registrationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyAge\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"annualTurnover\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceCategories\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otherCategory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aadhaarLast4\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gstin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountHolderName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ifscCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"branchName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"upiId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agreedToTermsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"agreed_to_terms_at\"},{\"name\":\"eSignStatus\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"e_sign_status\"},{\"name\":\"eSignTransactionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"e_sign_transaction_id\"},{\"name\":\"eSignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"e_signed_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"legalServiceOfferings\",\"kind\":\"object\",\"type\":\"LegalServiceOffering\",\"relationName\":\"LegalServiceOfferingToLegalServiceProviderProfile\"}],\"dbName\":\"legal_service_provider_profiles\"},\"LegalServiceOffering\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_id\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"LegalServiceProviderProfile\",\"relationName\":\"LegalServiceOfferingToLegalServiceProviderProfile\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"billingCycle\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"legal_service_offerings\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

